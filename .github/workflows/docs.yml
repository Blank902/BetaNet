name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install documentation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz plantuml
          sudo npm install -g markdownlint-cli
      
      - name: Validate markdown
        run: |
          markdownlint README.md DEVELOPER_GUIDE.md SECURITY_NOTES.md \
            CONTRIBUTING.md CHANGELOG.md technical-overview.md \
            --config .markdownlint.yml || echo "Markdown linting completed with warnings"
      
      - name: Generate API documentation
        run: |
          doxygen Doxyfile
          
          # Check for documentation warnings
          if [ -f doxygen.log ] && grep -E "(warning|error)" doxygen.log; then
            echo "Documentation has warnings/errors:"
            cat doxygen.log
            echo "Continuing with warnings..."
          fi
      
      - name: Create docs index
        run: |
          mkdir -p docs/site
          cat > docs/site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>BetaNet C Library Documentation</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; 
                         max-width: 800px; margin: 0 auto; padding: 2rem; line-height: 1.6; }
                  h1 { color: #333; border-bottom: 3px solid #0366d6; padding-bottom: 0.5rem; }
                  .doc-section { margin: 2rem 0; padding: 1rem; border-left: 4px solid #0366d6; 
                                background-color: #f6f8fa; }
                  a { color: #0366d6; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  .api-link { background-color: #0366d6; color: white; padding: 0.5rem 1rem; 
                             border-radius: 4px; display: inline-block; margin: 0.5rem 0; }
              </style>
          </head>
          <body>
              <h1>BetaNet C Library Documentation</h1>
              
              <div class="doc-section">
                  <h2>üìö User Documentation</h2>
                  <ul>
                      <li><a href="../README.html">README - Getting Started</a></li>
                      <li><a href="../DEVELOPER_GUIDE.html">Developer Guide</a></li>
                      <li><a href="../SECURITY_NOTES.html">Security Notes</a></li>
                      <li><a href="../CONTRIBUTING.html">Contributing Guidelines</a></li>
                      <li><a href="../CHANGELOG.html">Changelog</a></li>
                      <li><a href="../technical-overview.html">Technical Overview</a></li>
                  </ul>
              </div>
              
              <div class="doc-section">
                  <h2>üîß API Documentation</h2>
                  <a href="html/index.html" class="api-link">Browse API Documentation</a>
                  <p>Complete API reference generated from source code comments.</p>
              </div>
              
              <div class="doc-section">
                  <h2>üîê Protocol Specification</h2>
                  <p>The complete BetaNet v1.1 protocol specification is embedded in the README.</p>
                  <p>This implementation provides full compliance with the normative requirements.</p>
              </div>
          </body>
          </html>
          EOF
      
      - name: Convert markdown to HTML
        run: |
          for file in README.md DEVELOPER_GUIDE.md SECURITY_NOTES.md CONTRIBUTING.md CHANGELOG.md technical-overview.md; do
            if [ -f "$file" ]; then
              # Simple markdown to HTML conversion using Python
              python3 -c "
          import markdown
          import sys
          
          with open('$file', 'r') as f:
              content = f.read()
          
          html = markdown.markdown(content, extensions=['tables', 'fenced_code', 'toc'])
          
          # Wrap in basic HTML structure
          full_html = f'''
          <!DOCTYPE html>
          <html>
          <head>
              <title>BetaNet - {sys.argv[1]}</title>
              <meta charset=\"utf-8\">
              <style>
                  body {{ font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; 
                         max-width: 900px; margin: 0 auto; padding: 2rem; line-height: 1.6; }}
                  pre {{ background-color: #f6f8fa; padding: 1rem; border-radius: 4px; overflow-x: auto; }}
                  code {{ background-color: #f6f8fa; padding: 0.2rem 0.4rem; border-radius: 3px; }}
                  blockquote {{ border-left: 4px solid #dfe2e5; margin: 0; padding-left: 1rem; color: #6a737d; }}
                  table {{ border-collapse: collapse; width: 100%; }}
                  th, td {{ border: 1px solid #dfe2e5; padding: 0.5rem; text-align: left; }}
                  th {{ background-color: #f6f8fa; }}
                  a {{ color: #0366d6; }}
              </style>
          </head>
          <body>
              {html}
              <hr>
              <p><a href=\"site/index.html\">‚Üê Back to Documentation Index</a></p>
          </body>
          </html>
          '''
          
          with open('docs/{sys.argv[1]}.html', 'w') as f:
              f.write(full_html)
          " "$(basename "$file" .md)"
            fi
          done
      
      - name: Setup Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs
  
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
